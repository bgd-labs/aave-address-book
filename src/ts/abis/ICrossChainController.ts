// AUTOGENERATED - MANUALLY CHANGES WILL BE REVERTED BY THE GENERATOR
export const ICrossChainController_ABI = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'destinationChainId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'bridgeAdapter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'destinationBridgeAdapter',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bool',
        name: 'allowed',
        type: 'bool',
      },
    ],
    name: 'BridgeAdapterUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'newConfirmations',
        type: 'uint8',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
    ],
    name: 'ConfirmationsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ERC20Rescued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'envelopeId',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'origin',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'destination',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'originChainId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'destinationChainId',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'message',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct Envelope',
        name: 'envelope',
        type: 'tuple',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'isDelivered',
        type: 'bool',
      },
    ],
    name: 'EnvelopeDeliveryAttempted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'envelopeId',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'origin',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'destination',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'originChainId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'destinationChainId',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'message',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct Envelope',
        name: 'envelope',
        type: 'tuple',
      },
    ],
    name: 'EnvelopeRegistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'NativeTokensRescued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'invalidTimestamp',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
    ],
    name: 'NewInvalidation',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'bridgeAdapter',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bool',
        name: 'allowed',
        type: 'bool',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
    ],
    name: 'ReceiverBridgeAdaptersUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bool',
        name: 'isApproved',
        type: 'bool',
      },
    ],
    name: 'SenderUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'transactionId',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'envelopeId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encodedTransaction',
        type: 'bytes',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'destinationChainId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'bridgeAdapter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'destinationBridgeAdapter',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bool',
        name: 'adapterSuccessful',
        type: 'bool',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'returnData',
        type: 'bytes',
      },
    ],
    name: 'TransactionForwardingAttempted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'transactionId',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'envelopeId',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'originChainId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encodedEnvelope',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct Transaction',
        name: 'transaction',
        type: 'tuple',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'bridgeAdapter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'confirmations',
        type: 'uint8',
      },
    ],
    name: 'TransactionReceived',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'bridgeAdapter',
            type: 'address',
          },
          {
            internalType: 'uint256[]',
            name: 'chainIds',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]',
        name: 'bridgeAdaptersInput',
        type: 'tuple[]',
      },
    ],
    name: 'allowReceiverBridgeAdapters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'senders',
        type: 'address[]',
      },
    ],
    name: 'approveSenders',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'origin',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'destination',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'originChainId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'destinationChainId',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'message',
            type: 'bytes',
          },
        ],
        internalType: 'struct Envelope',
        name: 'envelope',
        type: 'tuple',
      },
    ],
    name: 'deliverEnvelope',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'bridgeAdapter',
            type: 'address',
          },
          {
            internalType: 'uint256[]',
            name: 'chainIds',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICrossChainForwarder.BridgeAdapterToDisable[]',
        name: 'bridgeAdapters',
        type: 'tuple[]',
      },
    ],
    name: 'disableBridgeAdapters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'bridgeAdapter',
            type: 'address',
          },
          {
            internalType: 'uint256[]',
            name: 'chainIds',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]',
        name: 'bridgeAdaptersInput',
        type: 'tuple[]',
      },
    ],
    name: 'disallowReceiverBridgeAdapters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'emergencyEtherTransfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'erc20Token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'emergencyTokenTransfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'currentChainBridgeAdapter',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'destinationBridgeAdapter',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'destinationChainId',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICrossChainForwarder.ForwarderBridgeAdapterConfigInput[]',
        name: 'bridgeAdapters',
        type: 'tuple[]',
      },
    ],
    name: 'enableBridgeAdapters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'destinationChainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'destination',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasLimit',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'forwardMessage',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
    ],
    name: 'getConfigurationByChain',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'requiredConfirmation',
            type: 'uint8',
          },
          {
            internalType: 'uint120',
            name: 'validityTimestamp',
            type: 'uint120',
          },
        ],
        internalType: 'struct ICrossChainReceiver.ReceiverConfiguration',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentEnvelopeNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentTransactionNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'envelopeId',
        type: 'bytes32',
      },
    ],
    name: 'getEnvelopeState',
    outputs: [
      {
        internalType: 'enum ICrossChainReceiver.EnvelopeState',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'origin',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'destination',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'originChainId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'destinationChainId',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'message',
            type: 'bytes',
          },
        ],
        internalType: 'struct Envelope',
        name: 'envelope',
        type: 'tuple',
      },
    ],
    name: 'getEnvelopeState',
    outputs: [
      {
        internalType: 'enum ICrossChainReceiver.EnvelopeState',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
    ],
    name: 'getForwarderBridgeAdaptersByChain',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'destinationBridgeAdapter',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'currentChainBridgeAdapter',
            type: 'address',
          },
        ],
        internalType: 'struct ICrossChainForwarder.ChainIdBridgeConfig[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
    ],
    name: 'getReceiverBridgeAdaptersByChain',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSupportedChains',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encodedEnvelope',
            type: 'bytes',
          },
        ],
        internalType: 'struct Transaction',
        name: 'transaction',
        type: 'tuple',
      },
    ],
    name: 'getTransactionState',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'confirmations',
            type: 'uint8',
          },
          {
            internalType: 'uint120',
            name: 'firstBridgedAt',
            type: 'uint120',
          },
        ],
        internalType: 'struct ICrossChainReceiver.TransactionStateWithoutAdapters',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'transactionId',
        type: 'bytes32',
      },
    ],
    name: 'getTransactionState',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'confirmations',
            type: 'uint8',
          },
          {
            internalType: 'uint120',
            name: 'firstBridgedAt',
            type: 'uint120',
          },
        ],
        internalType: 'struct ICrossChainReceiver.TransactionStateWithoutAdapters',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'origin',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'destination',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'originChainId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'destinationChainId',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'message',
            type: 'bytes',
          },
        ],
        internalType: 'struct Envelope',
        name: 'envelope',
        type: 'tuple',
      },
    ],
    name: 'isEnvelopeRegistered',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'envelopeId',
        type: 'bytes32',
      },
    ],
    name: 'isEnvelopeRegistered',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'bridgeAdapter',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
    ],
    name: 'isReceiverBridgeAdapterAllowed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'isSenderApproved',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'transactionId',
        type: 'bytes32',
      },
    ],
    name: 'isTransactionForwarded',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encodedEnvelope',
            type: 'bytes',
          },
        ],
        internalType: 'struct Transaction',
        name: 'transaction',
        type: 'tuple',
      },
    ],
    name: 'isTransactionForwarded',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'transactionId',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'bridgeAdapter',
        type: 'address',
      },
    ],
    name: 'isTransactionReceivedByAdapter',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedTransaction',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'originChainId',
        type: 'uint256',
      },
    ],
    name: 'receiveCrossChainMessage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'senders',
        type: 'address[]',
      },
    ],
    name: 'removeSenders',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'origin',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'destination',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'originChainId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'destinationChainId',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'message',
            type: 'bytes',
          },
        ],
        internalType: 'struct Envelope',
        name: 'envelope',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'gasLimit',
        type: 'uint256',
      },
    ],
    name: 'retryEnvelope',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedTransaction',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'gasLimit',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: 'bridgeAdaptersToRetry',
        type: 'address[]',
      },
    ],
    name: 'retryTransaction',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'chainId',
            type: 'uint256',
          },
          {
            internalType: 'uint8',
            name: 'requiredConfirmations',
            type: 'uint8',
          },
        ],
        internalType: 'struct ICrossChainReceiver.ConfirmationInput[]',
        name: 'newConfirmations',
        type: 'tuple[]',
      },
    ],
    name: 'updateConfirmations',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'chainId',
            type: 'uint256',
          },
          {
            internalType: 'uint120',
            name: 'validityTimestamp',
            type: 'uint120',
          },
        ],
        internalType: 'struct ICrossChainReceiver.ValidityTimestampInput[]',
        name: 'newValidityTimestamp',
        type: 'tuple[]',
      },
    ],
    name: 'updateMessagesValidityTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'whoCanRescue',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;
